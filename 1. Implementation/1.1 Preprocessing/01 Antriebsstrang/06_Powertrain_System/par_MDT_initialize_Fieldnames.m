function par_MDT = par_MDT_StrukturFeldsnamenInitialisirung()

%% Vorne-(VA) und Hinterachsen(HA) Felden:
% em, trans, akt, cost, Geometrie, LE, Masse
% Falls eine Variable soll eine Kuve oder ein Kennfeld sein, da muss die
% Variable das Wort "Curve"/"Map" enthalten damit ein/e Vektor/Matrize
% eingestellt wird.

% (1/2) erstes Niveau (folgt (2/2) untere Niveaue)
% Hinzufüge NUR skalaren Variablen, KEINE Felde die weitee untere Felde
% enthalten (!!!). Diese werden nachfolgend definiert.

fieldNames = {'em';'trans';'akt';'cost';'Geometrie';'LE';'Masse'};

em = {...
    'typ_EM'                          ;...
    'nmax'                            ;...
    'nnenn'                           ;...
    'Mnenn_achs'                      ;...
    'Mnenn_mot'                       ;...
    'Pnenn'                           ;...
    'K_Material'                      ;...
    'K_Anbauteile'                    ;...
    'K_Fertigung'                     ;...
    'K_ges'                           ;...
    'Maschinenlaenge_in_Meter'        ;...
    'Rotoraussendurchmesser'          ;...
    'akt_volumen'                     ;...
    'Statoraussendurchmesser'         ;...
    'Blechpaketlaenge'                ;...
    'Volumen_in_Liter'                ;...
    'Jx'                              ;...
    'Jy'                              ;...
    'Jz'                              ;...
    'M_max_mot'                       ;...
    'M_max_achse'                     ;...
    'MaxMotorTrqCurve_w'              ;...
    'MaxMotorTrqCurve_M'              ;...
    'MaxGeneratorTrqCurve_w'          ;...
    'MaxGeneratorTrqCurve_M'          ;...
    'MotorEffMap3D_w'                 ;...
    'MotorEffMap3D_M'                 ;...
    'MotorEffMap3D'                   ;...
    'GeneratorEffMap3D_w'             ;...
    'GeneratorEffMap3D_M'             ;...
    'GeneratorEffMap3D'               ;...
    'Motormasse'                      ;...
    'Masse_Stahl'                     ;...
    'Masse_Aluminium'                 ;...
    'Masse_Elektroblech'              ;...
    'Masse_Kupferdraht'               ;...
    'Masse_Magnete'                   ;...
    'Motoraussendurchmesser_in_Meter' ;...
    'Motorgesamtlaenge_in_Meter'      ;...
    'Statoraussendurchmesser_in_Meter';...
    'Rotoraussendurchmesser_in_Meter' };
trans = {...
    'n_gears'                ;...
    'i_gears'                ;...
    'delta_M'                ;...
    'M_nenn_em_Steuer'       ;...
    'n_nenn_em_Steuer'       ;...
    'n_max_em_Steuer'        ;...
    'typ_em_Steuer'          ;...
    'Jx_em_Steuer'           ;...
    'Jy_em_Steuer'           ;...
    'Jz_em_Steuer'           ;...
    'masse'                  ;...
    'masse_etv'              ;...
    'Jred'                   ;...
    'wkg'                    ;...
    'd_Abtriebsrad'          ;...
    'b_Abtriebsrad'          ;...
    'Getriebebreite_in_Meter';...
    'laenge'                 ;...
    'breite'                 ;...
    'hoehe'                  ;...
    'Jx'                     ;...
    'Jy'                     ;...
    'Jz'                     ;...
    'Jx_OD'                  ;...
    'Jy_OD'                  ;...
    'Jz_OD'                  ;...
    'Jx_eTV'                 ;...
    'Jy_eTV'                 ;...
    'Jz_eTV'                 ;...
    'K_ges'                  ;...
    'M_max_Steuer'};
akt = {...
    'az' ;...
    'rn';...
    'etv';...
    'OD' };
cost = {...
    'Stkzahl'     ;...
    'Standort'    ;...
    'Magnetpreise'};
Geometrie = {};
LE = {...
    'K_ges'};
Masse = {};

% (2/2) untere Niveaue

lowLevelNames = {'Geometrie.Topologie.',...
    'Masse.Getriebe.',...
    'trans.vzkonst.',...
    'trans.em_Steuer.'};
lowLevelFields{1} = {'Topologiebreite_in_Meter'};
lowLevelFields{2} = {'Getriebemasse'};
lowLevelFields{3} = {'beta_b'       ;...
    'beta'         ;...
    'E'            ;...
    'K'            ;...
    'S_H_min'      ;...
    'S_F_min'      ;...
    'eps_alpha'    ;...
    'eps_1'        ;...
    'eps_2'        ;...
    'mu'           ;...
    'imax_Stufe'   ;...
    'alpha'        ;...
    'mod_eTV_TVE'  ;...
    'mod_eTV_DiffE';...
    'rho_st'       ;...
    'rho_alu'      };
lowLevelFields{4} = {'MaxMotorTrqCurve_M'    ;...
    'MaxMotorTrqCurve_w'    ;...
    'MaxGeneratorTrqCurve_M';...
    'MaxGeneratorTrqCurve_w';...
    'MotorEffMap3D'         ;...
    'MotorEffMap3D_w'       ;...
    'MotorEffMap3D_M'       ;...
    'GeneratorEffMap3D'     ;...
    'GeneratorEffMap3D_w'   ;...
    'GeneratorEffMap3D_M'   };

%% Anlegung der Felden in par_MDT Struktur

% feldsnamen

for iFieldname = 1:length(fieldNames)
    tempFieldname = fieldNames{iFieldname};
    if eval(['length(',tempFieldname,')'])>0
        for iName = 1:eval(['length(',tempFieldname,')'])
            tempName = eval([tempFieldname,'{',num2str(iName),'}']);
            if contains(tempName,'Curve')
                eval(['par_MDT.',tempFieldname,'.',tempName,'=1:201;'])
            elseif contains(tempName,'Map')
                if strcmp(tempName(end-1:end),'_w')
                    eval(['par_MDT.',tempFieldname,'.',tempName,'=1:201;'])
                elseif strcmp(tempName(end-1:end),'_M')
                    eval(['par_MDT.',tempFieldname,'.',tempName,'=1:101;'])
                else
                    eval(['par_MDT.',tempFieldname,'.',tempName,'=(1:201)''*(1:101);'])
                end
            else
                eval(['par_MDT.',tempFieldname,'.',tempName,'=0;'])
            end
        end
    else
        eval(['par_MDT.',tempFieldname,'=[];'])
    end
end

% niedrigereEbene

for iLowlevelname = 1:length(lowLevelNames)
    for iLowlevelfield = 1:length(lowLevelFields{iLowlevelname})
        templowLevelFields = lowLevelFields{iLowlevelname};
        tempLowName = eval(['strcat(lowLevelNames{',num2str(iLowlevelname),'},',...
            'templowLevelFields{',num2str(iLowlevelfield),'})']);
        
        if contains(tempLowName,'Curve')
            eval(['par_MDT.',char(tempLowName),'=1:201;'])
        elseif contains(tempLowName,'Map')
            if strcmp(tempLowName(end-1:end),'_w')
                eval(['par_MDT.',char(tempLowName),'=(1:201);'])
            elseif strcmp(tempLowName(end-1:end),'_M')
                eval(['par_MDT.',char(tempLowName),'=(1:101);'])
            else
                eval(['par_MDT.',char(tempLowName),'=(1:201)''*(1:101);'])
            end
        else
            eval(['par_MDT.',char(tempLowName),'=0;'])
        end
    end
end
%Initialisierung par_MDT.trans.etv (notwendig, falls an einer Achse ohne Antrieb gesetzt) 
par_MDT.trans.etv.delta_M=0;
par_MDT.trans.etv.M_nenn_em_Steuer=0;
par_MDT.trans.etv.n_nenn_em_Steuer=0; 
par_MDT.trans.etv.n_max_em_Steuer=0; 
par_MDT.trans.etv.typ_em_Steuer=0; 
par_MDT.trans.etv.M_max_Steuer=0; 
par_MDT.trans.etv.laenge_em_Steuer=0; 
%Kennfelder
par_MDT.trans.etv.Kennfelder.MaxMotorTrqCurve_w=(1:201); 
par_MDT.trans.etv.Kennfelder.MaxMotorTrqCurve_M=(1:201); 
par_MDT.trans.etv.Kennfelder.MaxGeneratorTrqCurve_w=(1:201); 
par_MDT.trans.etv.Kennfelder.MaxGeneratorTrqCurve_M=(1:201); 
par_MDT.trans.etv.Kennfelder.MotorEffMap3D=(1:201)'*(1:101); 
par_MDT.trans.etv.Kennfelder.MotorEffMap3D_w=(1:201); 
par_MDT.trans.etv.Kennfelder.MotorEffMap3D_M=(1:101); 
par_MDT.trans.etv.Kennfelder.GeneratorEffMap3D=(1:201)'*(1:101); 
par_MDT.trans.etv.Kennfelder.GeneratorEffMap3D_w=(1:201); 
par_MDT.trans.etv.Kennfelder.GeneratorEffMap3D_M=(1:101); 
% Trägheiten und Massen
par_MDT.trans.etv.J.Jx_em_Steuer=0; 
par_MDT.trans.etv.J.Jy_em_Steuer=0; 
par_MDT.trans.etv.J.Jz_em_Steuer=0; 
par_MDT.trans.etv.J.Jred_EM_Steuer=0;
par_MDT.trans.etv.J.Jred_eTV=0;
par_MDT.trans.etv.m_eTV=0;
par_MDT.trans.etv.m_eTV=0; 
par_MDT.trans.etv.m_em_Steuer=0; 
par_MDT.trans.etv.J.Jx_eTV=0;
par_MDT.trans.etv.J.Jy_eTV=0;
par_MDT.trans.etv.J.Jz_eTV=0;
% Übersetzungen
par_MDT.trans.etv.i.i12_I=0;
par_MDT.trans.etv.i.i12_II=0;
par_MDT.trans.etv.i.i12_III=0;
par_MDT.trans.etv.i.i12_IV=0;
par_MDT.trans.etv.i.iVTV_1=0;
par_MDT.trans.etv.i.iVTV_2=0;
% Wirkungsgrade
par_MDT.trans.etv.eta.eta12_I=0;
par_MDT.trans.etv.eta.eta12_II=0;
par_MDT.trans.etv.eta.eta12_III=0;
par_MDT.trans.etv.eta.eta12_IV=0;
par_MDT.trans.etv.eta.etaVTV_12=0;
par_MDT.trans.etv.eta.etaVTV_34=0;


clearvars par_MDT.VA.trans.M_nenn_em_Steuer par_MDT.VA.trans.n_nenn_em_Steuer par_MDT.VA.trans.delta_M par_MDT.VA.trans.n_max_em_Steuer par_MDT.VA.trans.typ_em_Steuer par_MDT.VA.trans.Jx_em_Steuer par_MDT.VA.trans.Jy_em_Steuer par_MDT.VA.trans.Jz_em_Steuer par_MDT.VA.trans.masse_etv par_MDT.VA.trans.Jx_OD par_MDT.VA.trans.Jy_OD par_MDT.VA.trans.Jz_OD par_MDT.VA.trans.Jx_eTV par_MDT.VA.trans.Jy_eTV par_MDT.VA.trans.Jz_eTV par_MDT.VA.trans.M_max_Steuer par_MDT.VA.trans.em_Steuer







